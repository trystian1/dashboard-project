"use strict";angular.module("dashboardProjectApp",["ngAnimate","ui.router"]).config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/keymetrics"),$stateProvider.state("geo",{url:"/geo",templateUrl:"views/geo.html",controller:"GeoCtrl as geo"}).state("keymetrics",{url:"/keymetrics",templateUrl:"views/key-metrics.html",controller:"KeymetricsCtrl as keymetric"}).state("issues",{url:"/issues",templateUrl:"views/issues.html",controller:"IssuesCtrl as issues"})}]),angular.module("dashboardProjectApp").service("geoService",function($http){this.getGeoData=function(){return $http({method:"GET",url:"api/companies.json"})}}),angular.module("dashboardProjectApp").service("metricsService",function($http,$timeout,$rootScope){this.getQuaterSales=function(){return $http({method:"GET",url:"api/sales.json"})},this.pollQuarterSales=function(){var _this=this,data={response:{},calls:0},poller=function(){$http.get("api/sales.json").then(function(r){data.response=r.data,data.calls++,_this.salesTimeout=$timeout(poller,1e3),$rootScope.$broadcast("sales-data:fetched",data)})};poller()},this.pollIssues=function(){var _this=this,data={response:{},calls:0},poller=function(){$http.get("api/MOCK_DATA.csv").then(function(r){data.response=r.data,data.calls++,_this.issuesTimeout=$timeout(poller,2e3),$rootScope.$broadcast("issues-data:fetched",data)})};poller()},this.cancelRequests=function(){console.log("cancel requestssss",this.salesTimeout,this.issuesTimeout),$timeout.cancel(this.salesTimeout),$timeout.cancel(this.issuesTimeout)},this.convertCSV=function(csv){var lines=csv.split("\n"),array=[];return lines.forEach(function(line){var lineInfo=line.split(","),object={id:lineInfo[0],firstName:lineInfo[1],lastName:lineInfo[2],email:lineInfo[3],issue:lineInfo[5]&&lineInfo[5].length>40?lineInfo[5].substring(0,40):lineInfo[5],opened:lineInfo[6],closed:lineInfo[7],status:lineInfo[8]};array.push(object)}),array},this.getRandomIssue=function(issues){return issues[Math.floor(Math.random()*issues.length)+1]},this.getLatestSale=function(){var sale=Math.floor(4e3*Math.random())+1;return[{sales:sale.toString(),registered:new Date}]},this.parseData=function(data,dateValue){var yearData={Q1:[],Q2:[],Q3:[],Q4:[]};return data.forEach(function(value){var month=new Date(value[dateValue]).getMonth();switch(month){case 0:case 1:case 2:yearData.Q1.push(value);break;case 3:case 4:case 5:yearData.Q2.push(value);break;case 6:case 7:case 8:yearData.Q3.push(value);break;case 9:case 10:case 11:yearData.Q4.push(value)}}),yearData},this.getTotalQuarterResult=function(data){var totalResult=0;return data.forEach(function(data){var salesData=data.sales.replace(",","");totalResult+=parseFloat(salesData.replace("$",""),10)}),totalResult.toFixed(2)},this.getPositionOnGraph=function(totalResult){var precentage=(totalResult/1e6).toFixed(2);return 373-(373*precentage).toFixed(0)}}),angular.module("dashboardProjectApp").controller("GeoCtrl",["geoService",function(geoService){var _this=this;geoService.getGeoData().then(function(response){_this.countries=response.data,console.log(_this.countries)},function(response){}),this.showOnMap=function(country){var position={lat:country.lat,lng:country.lng},map=new google.maps.Map(document.getElementById("map"),{zoom:4,center:position});new google.maps.Marker({position:position,map:map});map.panTo(position)}}]),angular.module("dashboardProjectApp").controller("IssuesCtrl",["metricsService","$scope",function(metricsService,$scope){var _this=this;this.orderProp="opened",metricsService.pollIssues(),$scope.$on("issues-data:fetched",function(event,data){_this.totalIssues=metricsService.convertCSV(data.response),_this.loadedItems=101,_this.issues=_this.totalIssues.slice(1,101)}),$scope.$on("$destroy",function(){metricsService.cancelRequests()}),this.sortBy=function(prop){this.orderProp=prop}}]),angular.module("dashboardProjectApp").controller("KeymetricsCtrl",["metricsService","$interval","$scope",function(metricsService,$interval,$scope){var _this=this;this.q1TotalSales=0,this.q2TotalSales=0,this.q3TotalSales=0,this.q4TotalSales=0,this.issuesQ1Length=0,this.issuesQ2Length=0,this.issuesQ3Length=0,this.issuesQ4Length=0,metricsService.pollQuarterSales(),metricsService.pollIssues(),$scope.$on("$destroy",function(){metricsService.cancelRequests()}),$scope.$on("sales-data:fetched",function(event,data){_this.yearData=metricsService.parseData(data.response,"registered"),_this.parseDataIntoQuarters(_this.yearData),_this.recentSale=data.response[data.response.length-1]}),$scope.$on("issues-data:fetched",function(event,data){_this.issues=metricsService.convertCSV(data.response),_this.randomIssue=metricsService.getRandomIssue(_this.issues),_this.issueYearData=metricsService.parseData(_this.issues,"opened"),_this.parseIssuesIntoGraph(_this.issueYearData)}),this.parseDataIntoQuarters=function(data){this.q1TotalSales=metricsService.getTotalQuarterResult(data.Q1),this.q2TotalSales=metricsService.getTotalQuarterResult(data.Q2),this.q3TotalSales=metricsService.getTotalQuarterResult(data.Q3),this.q4TotalSales=metricsService.getTotalQuarterResult(data.Q4),this.progress=this.q4TotalSales/1e6*100,this.q1Position=metricsService.getPositionOnGraph(this.q1TotalSales),this.q2Position=metricsService.getPositionOnGraph(this.q2TotalSales),this.q3Position=metricsService.getPositionOnGraph(this.q3TotalSales),this.q4Position=metricsService.getPositionOnGraph(this.q4TotalSales)},this.parseIssuesIntoGraph=function(issues){this.issuesQ1Length=issues.Q1.length,this.issuesQ2Length=issues.Q2.length,this.issuesQ3Length=issues.Q3.length,this.issuesQ4Length=issues.Q4.length}}]),angular.module("dashboardProjectApp").controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]});